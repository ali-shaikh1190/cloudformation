AWSTemplateFormatVersion: '2010-09-09'
Description: 3-tier-vpc stack (2 AZs)
Metadata:
  TemplateGenerationDate: '2017-05-03 17:02:00.000000'
  Author: Qamar Ali Shaikh x Github:ali-shaikh1190
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Ownership
      Parameters:
      - Owner
      - Project
    - Label:
        default: Network Configuration
      Parameters:
      - vpcCidr
      - publiclbSubnetACidr
      - publiclbSubnetBCidr
      - privateappSubnetACidr
      - privateappSubnetBCidr
      - privatedbSubnetACidr
      - privatedbSubnetBCidr
    ParameterLabels:
      Owner:
        default: Team or Individual Owner
Parameters:
  Owner:
    Type: String
    Default: FirstName LastName
  Project:
    Type: String
    Default: My-Custom-VPC
  vpcCidr:
    Description: VPC CIDR block.
    Type: String
    Default: 10.90.0.0/16
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  publiclbSubnetACidr:
    Description: Public LB subnet A CIDR block.
    Type: String
    Default: 10.90.0.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  publiclbSubnetBCidr:
    Description: Public LB subnet B CIDR block.
    Type: String
    Default: 10.90.4.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  privateappSubnetACidr:
    Description: Private APP subnet A CIDR block.
    Type: String
    Default: 10.90.8.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  privateappSubnetBCidr:
    Description: Private APP subnet B CIDR block.
    Type: String
    Default: 10.90.12.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  privatedbSubnetACidr:
    Description: Private DB subnet A CIDR block.
    Type: String
    Default: 10.90.16.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  privatedbSubnetBCidr:
    Description: Private DB subnet B CIDR block.
    Type: String
    Default: 10.90.20.0/22
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x and
      subnet of VPC.
  subnet1AZ:
    Description: Select Subnet A availability zone.
    Type: AWS::EC2::AvailabilityZone::Name
  subnet2AZ:
    Description: Select Subnet B availability zone.
    Type: AWS::EC2::AvailabilityZone::Name
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'vpcCidr'
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'Vpc'
      InternetGatewayId: !Ref 'InternetGateway'
  PubliclbSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'publiclbSubnetACidr'
      AvailabilityZone: !Ref 'subnet1AZ'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  PubliclbSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'publiclbSubnetBCidr'
      AvailabilityZone: !Ref 'subnet2AZ'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  PrivateappSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'privateappSubnetACidr'
      AvailabilityZone: !Ref 'subnet1AZ'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Private
        Key: Network
  PrivateappSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'privateappSubnetBCidr'
      AvailabilityZone: !Ref 'subnet2AZ'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Private
        Key: Network
  PrivatedbSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'privatedbSubnetACidr'
      AvailabilityZone: !Ref 'subnet1AZ'      
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Private
        Key: Network
  PrivatedbSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !Ref 'privatedbSubnetBCidr'
      AvailabilityZone: !Ref 'subnet2AZ'      
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Private
        Key: Network
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'Vpc'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'Vpc'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'Vpc'
      Tags:
      - Value: !Ref 'AWS::StackName'
        Key: Application
      - Value: Public
        Key: Network
  PublicSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PubliclbSubnetA'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PubliclbSubnetB'
      RouteTableId: !Ref 'PublicRouteTable'
  PrivateSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateappSubnetA'
      SubnetId: !Ref 'PrivatedbSubnetA'
      RouteTableId: !Ref 'PrivateRouteTableA'
  PrivateSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateappSubnetB'
      SubnetId: !Ref 'PrivatedbSubnetB'
      RouteTableId: !Ref 'PrivateRouteTableB'
  NatEipA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatEipB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    DependsOn: InternetGatewayAttachment
    Properties:
      SubnetId: !Ref 'PubliclbSubnetA'
      AllocationId: !GetAtt [NatEipA, AllocationId]
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    DependsOn: InternetGatewayAttachment
    Properties:
      SubnetId: !Ref 'PubliclbSubnetB'
      AllocationId: !GetAtt [NatEipB, AllocationId]
  PublicInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'InternetGateway'
  PrivateInternetRouteA:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref 'NatGatewayA'
      RouteTableId: !Ref 'PrivateRouteTableA'
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRouteB:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref 'NatGatewayB'
      RouteTableId: !Ref 'PrivateRouteTableB'
      DestinationCidrBlock: 0.0.0.0/0
Outputs:
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value: !Ref Owner
  Project:
    Description: The project name
    Value: !Ref Project
