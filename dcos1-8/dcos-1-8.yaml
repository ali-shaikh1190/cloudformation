AWSTemplateFormatVersion: 2010-09-09
Description: DC/OS stack (3 AZs)
Metadata:
  TemplateGenerationDate: '2016-06-29 17:02:00.000000'
  DcosImageCommit: 14509fe1e7899f439527fb39867194c7a425c771
  Todo: /etc/hosts to include ip-x-x-x-x
Parameters:
  Ami:
    Type: String
    Description: 'Optional: Custom CoreOS AMI id'
    Default: default
  SshKeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: SSH key pair
  AdminLocation:
    Type: String
    Description: IP range (CIDR) to whitelist for access to the admin zone
    Default: 0.0.0.0/0
  OAuthEnabled:
    Type: String
    Description: Enable OAuth authentication?
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
  NumMasterNodes:
    Type: Number
    Description: Number of master nodes
    AllowedValues:
      - 1
      - 3
      - 5
    Default: '3'
  NumPrivateSlaveNodes:
    Type: Number
    Description: Number of private slave nodes
    MinValue: '3'
    Default: '3'
  NumPublicSlaveNodes:
    Type: Number
    Description: Number of public slave nodes
    MinValue: '1'
    Default: '1'
Conditions:
  RegionIsUsEast1: !Equals 
    - !Ref 'AWS::Region'
    - us-east-1
  CustomCoreOSAMI: !Not 
    - !Equals 
      - !Ref Ami
      - default
Mappings:
  RegionMap:
    eu-central-1:
      AMI: ami-3ae31555
    eu-west-1:
      AMI: ami-b7cba3c4
    us-east-1:
      AMI: ami-6d138f7a
Resources:
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.66.0.0/16
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  DhcpOptions:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !If 
        - RegionIsUsEast1
        - ec2.internal
        - !Join 
          - ''
          - - !Ref 'AWS::Region'
            - .compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  VpcDhcpOptionsAssociation:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref Vpc
      DhcpOptionsId: !Ref DhcpOptions
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway
  PublicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.0.0/22
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.4.0/22
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PublicSubnetC:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.8.0/22
      AvailabilityZone: !Select 
        - '2'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PrivateSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.12.0/22
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Private
          Key: Network
  PrivateSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.16.0/22
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Private
          Key: Network
  PrivateSubnetC:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: 10.66.20.0/22
      AvailabilityZone: !Select 
        - '2'
        - !GetAZs 
          Ref: 'AWS::Region'
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Private
          Key: Network
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PrivateRouteTableA:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PrivateRouteTableB:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PrivateRouteTableC:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Value: !Ref 'AWS::StackName'
          Key: Application
        - Value: Public
          Key: Network
  PublicSubnetRouteTableAssociationA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociationB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociationC:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetRouteTableAssociationA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA
  PrivateSubnetRouteTableAssociationB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB
  PrivateSubnetRouteTableAssociationC:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC
  NatEipA:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatEipB:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatEipC:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NatGatewayA:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: InternetGatewayAttachment
    Properties:
      SubnetId: !Ref PublicSubnetA
      AllocationId: !GetAtt 
        - NatEipA
        - AllocationId
  NatGatewayB:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: InternetGatewayAttachment
    Properties:
      SubnetId: !Ref PublicSubnetB
      AllocationId: !GetAtt 
        - NatEipB
        - AllocationId
  NatGatewayC:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: InternetGatewayAttachment
    Properties:
      SubnetId: !Ref PublicSubnetC
      AllocationId: !GetAtt 
        - NatEipC
        - AllocationId
  PublicInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrivateInternetRouteA:
    Type: 'AWS::EC2::Route'
    Properties:
      NatGatewayId: !Ref NatGatewayA
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRouteB:
    Type: 'AWS::EC2::Route'
    Properties:
      NatGatewayId: !Ref NatGatewayB
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
  PrivateInternetRouteC:
    Type: 'AWS::EC2::Route'
    Properties:
      NatGatewayId: !Ref NatGatewayC
      RouteTableId: !Ref PrivateRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
  LbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Mesos master LB
  AdminSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Enable admin access to servers
      SecurityGroupIngress:
        - ToPort: '22'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
          FromPort: '22'
        - ToPort: '80'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
          FromPort: '80'
        - ToPort: '443'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
          FromPort: '443'
  PublicSlaveSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Mesos slaves public
  MasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Mesos masters
      SecurityGroupIngress:
        - ToPort: '5050'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
          FromPort: '5050'
        - ToPort: '80'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
          FromPort: '80'
        - ToPort: '8080'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
          FromPort: '8080'
        - ToPort: '8181'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
          FromPort: '8181'
        - ToPort: '2181'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
          FromPort: '2181'
  SlaveSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Mesos slaves
  MasterToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref MasterSecurityGroup
      FromPort: '0'
  SlaveToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '0'
  SlaveToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref MasterSecurityGroup
      FromPort: '0'
  SlaveToMasterLbIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '2181'
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: tcp
      GroupId: !Ref LbSecurityGroup
      FromPort: '2181'
  PublicSlaveToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref SlaveSecurityGroup
      FromPort: '0'
  MasterToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref SlaveSecurityGroup
      FromPort: '0'
  PublicSlaveIngressOne:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '21'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '0'
  PublicSlaveIngressTwo:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '5050'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '23'
  PublicSlaveIngressThree:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '5052'
  PublicSlaveIngressFour:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '21'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '0'
  PublicSlaveIngressFive:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '5050'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '23'
  PublicSlaveIngressSix:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '5052'
  PublicSlaveToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref MasterSecurityGroup
      FromPort: '0'
  MasterToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '0'
  SlaveToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref SlaveSecurityGroup
      FromPort: '0'
  PublicSlaveToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      ToPort: '65535'
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      GroupId: !Ref PublicSlaveSecurityGroup
      FromPort: '0'
  ExhibitorS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
  MasterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ExhibitorS3Bucket
                      - /*
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ExhibitorS3Bucket
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:DeleteObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketPolicy'
                  - 's3:GetObject'
                  - 's3:GetObjectAcl'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListMultipartUploadParts'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                Resource:
                  - !Ref 'AWS::StackId'
                  - !Join 
                    - ''
                    - - !Ref 'AWS::StackId'
                      - /*
              - Effect: Allow
                Action:
                  - 'ec2:DescribeKeyPairs'
                  - 'ec2:DescribeSubnets'
                  - 'autoscaling:DescribeLaunchConfigurations'
                  - 'autoscaling:UpdateAutoScalingGroup'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeScalingActivities'
                  - 'elasticloadbalancing:DescribeLoadBalancers'
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
  SlaveRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyName: Slaves
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:*'
                Resource:
                  - !Ref 'AWS::StackId'
                  - !Join 
                    - ''
                    - - !Ref 'AWS::StackId'
                      - /*
              - Effect: Allow
                Action:
                  - 'ec2:CreateTags'
                  - 'ec2:DescribeInstances'
                  - 'ec2:CreateVolume'
                  - 'ec2:DeleteVolume'
                  - 'ec2:AttachVolume'
                  - 'ec2:DetachVolume'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeVolumeStatus'
                  - 'ec2:DescribeVolumeAttribute'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:CopySnapshot'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:DescribeSnapshotAttribute'
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - ec2.amazonaws.com
  MasterInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref MasterRole
      Path: /
  SlaveInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref SlaveRole
      Path: /
  PublicSlaveLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: 'true'
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
        - !Ref PublicSubnetC
      Listeners:
        - InstanceProtocol: HTTP
          LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
        - InstanceProtocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          Protocol: TCP
      SecurityGroups:
        - !Ref PublicSlaveSecurityGroup
      HealthCheck:
        Timeout: '2'
        Target: 'HTTP:9090/_haproxy_health_check'
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '5'
  InternalMasterLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      Scheme: internal
      CrossZone: 'true'
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
        - !Ref PublicSubnetC
      Listeners:
        - InstanceProtocol: HTTP
          LoadBalancerPort: '5050'
          InstancePort: '5050'
          Protocol: HTTP
        - InstanceProtocol: TCP
          LoadBalancerPort: '2181'
          InstancePort: '2181'
          Protocol: TCP
        - InstanceProtocol: HTTP
          LoadBalancerPort: '8181'
          InstancePort: '8181'
          Protocol: HTTP
        - InstanceProtocol: HTTP
          LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
        - InstanceProtocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          Protocol: TCP
        - InstanceProtocol: HTTP
          LoadBalancerPort: '8080'
          InstancePort: '8080'
          Protocol: HTTP
      SecurityGroups:
        - !Ref LbSecurityGroup
        - !Ref AdminSecurityGroup
        - !Ref SlaveSecurityGroup
        - !Ref PublicSlaveSecurityGroup
        - !Ref MasterSecurityGroup
      HealthCheck:
        Timeout: '5'
        Target: 'HTTP:5050/health'
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: 'true'
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
        - !Ref PublicSubnetC
      Listeners:
        - InstanceProtocol: HTTP
          LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
        - InstanceProtocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          Protocol: TCP
      SecurityGroups:
        - !Ref LbSecurityGroup
        - !Ref AdminSecurityGroup
      HealthCheck:
        Timeout: '5'
        Target: 'HTTP:5050/health'
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
  SlaveLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      AssociatePublicIpAddress: 'false'
      ImageId: !If 
        - CustomCoreOSAMI
        - !Ref Ami
        - !FindInMap 
          - RegionMap
          - !Ref 'AWS::Region'
          - AMI
      IamInstanceProfile: !Ref SlaveInstanceProfile
      KeyName: !Ref SshKeyPair
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
        - !Ref SlaveSecurityGroup
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/e73ba2b1cd17795e4dcb3d6647d11a29b9c35084.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=SlaveServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_500d179ba527f84b6fdf5fb37d53631249fc123e", "dcos-metadata--setup_500d179ba527f84b6fdf5fb37d53631249fc123e"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/slave
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
  MasterLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      AssociatePublicIpAddress: 'true'
      ImageId: !If 
        - CustomCoreOSAMI
        - !Ref Ami
        - !FindInMap 
          - RegionMap
          - !Ref 'AWS::Region'
          - AMI
      IamInstanceProfile: !Ref MasterInstanceProfile
      KeyName: !Ref SshKeyPair
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
        - !Ref MasterSecurityGroup
        - !Ref AdminSecurityGroup
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/e73ba2b1cd17795e4dcb3d6647d11a29b9c35084.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_500d179ba527f84b6fdf5fb37d53631249fc123e", "dcos-metadata--setup_500d179ba527f84b6fdf5fb37d53631249fc123e"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/master
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws_master
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
  PublicSlaveLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      AssociatePublicIpAddress: 'true'
      ImageId: !If 
        - CustomCoreOSAMI
        - !Ref Ami
        - !FindInMap 
          - RegionMap
          - !Ref 'AWS::Region'
          - AMI
      IamInstanceProfile: !Ref SlaveInstanceProfile
      KeyName: !Ref SshKeyPair
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      InstanceType: m3.xlarge
      SecurityGroups:
        - !Ref PublicSlaveSecurityGroup
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/e73ba2b1cd17795e4dcb3d6647d11a29b9c35084.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=PublicSlaveServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_500d179ba527f84b6fdf5fb37d53631249fc123e", "dcos-metadata--setup_500d179ba527f84b6fdf5fb37d53631249fc123e"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/slave_public
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
  MasterServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    DependsOn: PublicInternetRoute
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref NumMasterNodes
    Properties:
      LaunchConfigurationName: !Ref MasterLaunchConfig
      VPCZoneIdentifier:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
        - !Ref PublicSubnetC
      DesiredCapacity: !Ref NumMasterNodes
      MinSize: !Ref NumMasterNodes
      MaxSize: !Ref NumMasterNodes
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer
        - !Ref InternalMasterLoadBalancer
      Tags:
        - Value: mesos-master
          Key: role
          PropagateAtLaunch: 'true'
  PublicSlaveServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    DependsOn: PublicInternetRoute
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref NumPublicSlaveNodes
    Properties:
      LaunchConfigurationName: !Ref PublicSlaveLaunchConfig
      VPCZoneIdentifier:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
        - !Ref PublicSubnetC
      DesiredCapacity: !Ref NumPublicSlaveNodes
      MinSize: !Ref NumPublicSlaveNodes
      MaxSize: !Ref NumPublicSlaveNodes
      LoadBalancerNames:
        - !Ref PublicSlaveLoadBalancer
      Tags:
        - Value: mesos-slave
          Key: role
          PropagateAtLaunch: 'true'
  SlaveServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    DependsOn:
      - PrivateInternetRouteA
      - PrivateInternetRouteB
      - PrivateInternetRouteC
    CreationPolicy:
      ResourceSignal:
        Timeout: PT45M
        Count: !Ref NumPrivateSlaveNodes
    Properties:
      LaunchConfigurationName: !Ref SlaveLaunchConfig
      VPCZoneIdentifier:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
        - !Ref PrivateSubnetC
      DesiredCapacity: !Ref NumPrivateSlaveNodes
      MinSize: !Ref NumPrivateSlaveNodes
      MaxSize: !Ref NumPrivateSlaveNodes
      Tags:
        - Value: mesos-slave
          Key: role
          PropagateAtLaunch: 'true'
Outputs:
  DnsAddress:
    Description: Mesos master
    Value: !GetAtt 
      - ElasticLoadBalancer
      - DNSName
  ExhibitorS3Bucket:
    Description: Exhibitor S3 bucket name
    Value: !Ref ExhibitorS3Bucket
  PublicSlaveDnsAddress:
    Description: Public slaves
    Value: !GetAtt 
      - PublicSlaveLoadBalancer
      - DNSName

