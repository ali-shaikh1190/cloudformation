AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template AutoScalingMultiAZWithNotifications:
  Create a multi-az, load balanced and Auto Scaled Server/Component running. 
  The EC2 is configured to span in the subnets given as a parameter in the
  region and is Auto-Scaled based on the CPU utilization of the servers. Notifications
  will be sent to the operator email address on scaling events. The instances are
  load balanced with a simple health check against the pre configured LoadBalancer. **WARNING**
  This template creates one or more Amazon EC2 instances and an a SNS Topic.
  You will be billed for the AWS resources used if you create a stack from this template.'
Metadata:
  TemplateGenerationDate: '2017-05-06 15:02:00.000000'
  Author: Qamar Ali Shaikh:qamar.ali@techpartner.in
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: EC2 Configuration
      Parameters:
      - InstanceType
      - InstanceAMI
      - InstanceSecurityGroup
      - Associatepublicip
      - InstaceTagKey
      - InstanceTagValue
      - KeyName
      - UserDataScript
    - Label:
        default: AutoScaling Configuration
      Parameters:
      - MinInstances
      - MaxInstances
      - Subnet1
      - Subnet2
      - LoadbalancerName
    - Label:
        default: Scaling Policy Configuration
      Parameters:
      - CPUHighThreshold
      - CPULowThreshold 
      - MonitorPeriod
      - EvaluationPeriod
      - CooldowninSecs
    - Label:
        default: Notification
      Parameters:
      - OperatorEmail
Parameters:
  InstanceType:
    Description: Server EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  MinInstances:
    Type: Number
    Description: Minimum Number of instance to Launch in AutoScaling Group
    AllowedValues:
    - 1
    - 2
    - 3
    Default: '1'
  MaxInstances:
    Type: Number
    Description: Minimum Number of instance to Launch in AutoScaling Group
    AllowedValues:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    Default: '3'
  InstanceAMI:
    Description: Base Image to Launch from.
    Type: String
    ConstraintDescription: Must be a valid AMI-ID.
  UserDataScript:
    Description: Script to Run at Launch of Instance..
    Type: String
    Default: https://s3.amazonaws.com/my-ec2-provision/UserData.sh
    ConstraintDescription: Must be a valid Bash Script to provision the launched instance.
  Associatepublicip:
    Description: AutoScale config will Associate a public ip to the instance launched if value set to True.
    Type: String
    AllowedValues:
    - 'True'
    - 'False'
    Default: 'False'
    ConstraintDescription: Must be a valid String either True or False.
  CPUHighThreshold:
    Description: Scale Up Based on given Threshold.
    Type: String
    Default: 60
    ConstraintDescription: Must be a valid Integer Percentage in 1% - 99%.
    AllowedPattern: ([0-9]{1,2}]?)
  CPULowThreshold:
    Description: Scale Down Based on given Threshold.
    Type: String
    Default: 30
    ConstraintDescription: Must be a valid Integer Percentage in 1% - 99%.
    AllowedPattern: ([0-9]{1,2}]?)
  EvaluationPeriod:
    Description: Minimum number of consecutive evaluation periods to monitor and scale instances.
    Type: String
    Default: 2
  MonitorPeriod:
    Description: Minimum number of seconds to wait after one evaluation.
    Type: String
    Default: 300
  CooldowninSecs:
    Description: Minimum number of seconds to wait after one one successfull scale up/down and initiate launch/terminate .
    Type: String
    Default: 60
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Existing Security Group to be attahced to EC2.
    ConstraintDescription: Must be a SG-ID.
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet-ID to Launch Instance in.
    ConstraintDescription: Subnet-ID to Launch Instance in.
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet-ID to Launch Instance in.
    ConstraintDescription: Subnet-ID to Launch Instance in.
  InstaceTagKey:
    Type: String
    Description: Tag Key to be given to Launced Instance.
    ConstraintDescription: Tag Key to be given to Launced Instance.
  InstanceTagValue:
    Type: String
    Description: Tag Value to be given to Launced Instance.
    ConstraintDescription: Tag Value to be given to Launced Instance.
  LoadbalancerName:
    Type: String
    Description: Loadbalancer Name to Attach Ec2 Instance Launched.
    ConstraintDescription: Loadbalancer Name to Attach Ec2 Instance Launched.
  OperatorEmail:
    Description: EMail address to notify if there are any scaling operations
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    Description: must be a valid email address.
    ConstraintDescription: must be a valid email address.
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref 'OperatorEmail'
        Protocol: email
  ServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref 'LaunchConfig'
      VPCZoneIdentifier:
       - !Ref 'Subnet1'
       - !Ref 'Subnet2'
      MinSize: !Ref 'MinInstances'
      MaxSize: !Ref 'MaxInstances'
      LoadBalancerNames:
      - !Ref 'LoadbalancerName'
      Tags:
      - Value: !Ref 'InstanceTagValue'
        Key: !Ref 'InstaceTagKey'
        PropagateAtLaunch: 'true'
      NotificationConfiguration:
        TopicARN: !Ref 'NotificationTopic'
        NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: '1'
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      Comment: Add Ec2 to Autoscaling.
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join ['', ['[main]
      
                    ', stack=, !Ref 'AWS::StackId', '
      
                    ', region=, !Ref 'AWS::Region', '
      
                    ']]
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join ['', ['[cfn-auto-reloader-hook]
      
                    ', 'triggers=post.update
      
                    ', 'path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init
      
                    ', 'action=/usr/local/bin/cfn-init -v ', '         --stack ', !Ref 'AWS::StackName',
                  '         --resource LaunchConfig ', '         --region ',
                  !Ref 'AWS::Region', '
      
                    ', 'runas=root
      
                    ']]
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      AssociatePublicIpAddress: !Ref 'Associatepublicip'
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'InstanceAMI'
      SecurityGroups:
      - !Ref 'InstanceSecurityGroup'
      InstanceType: !Ref 'InstanceType'
      UserData: !Base64
        Fn::Join:
        - ''
        - - 'Content-Type: multipart/mixed; boundary="=======6t461261365=="

            '
          - 'MIME-Version: 1.0

            '
          - ' 

            '
          - '--=======6t461261365==

            '
          - 'Content-Type: text/x-shellscript; charset="us-ascii"

            '
          - 'Content-Disposition: attachment; filename="cfn-setup.sh"

            '
          - '  

            '
          - '#!/bin/bash -xe

            '
          - 'curl -s -S -o /tmp/userdata.sh '
          - !Ref 'UserDataScript'
          - '

            '
          - 'chmod 755 /tmp/userdata.sh'
          - '

            '
          - '/tmp/userdata.sh'
          - '

            '
          - 'set -o errexit; set -o nounset; set -o pipefail

            '
          - '# Install AWS cfn-bootstrap utilities
  
            '
          - 'apt-get update
  
            '
          - 'apt-get -y install python-pip
  
            '
          - 'pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
  
            '
          - "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n"
          - "chmod +x /etc/init.d/cfn-hup \n"
          - "update-rc.d cfn-hup defaults \n"
          - "service cfn-hup start \n"
          - /usr/local/bin/cfn-init -v
          - ' --stack '
          - !Ref 'AWS::StackName'
          - ' --resource LaunchConfig'
          - ' --region '
          - !Ref 'AWS::Region'
          - '
  
            '
          - '/usr/local/bin/cfn-signal -e $? '
          - ' --stack '
          - !Ref 'AWS::StackName'
          - ' --resource ServerGroup'
          - ' --region '
          - !Ref 'AWS::Region'
          - '

            '
          - '
  
            '
          - '--=======6t461261365==--

            '
  ServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'ServerGroup'
      Cooldown: !Ref 'CooldowninSecs'
      ScalingAdjustment: '1'
  ServerScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'ServerGroup'
      Cooldown: !Ref 'CooldowninSecs'
      ScalingAdjustment: '-1'
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-up if CPU > !Ref 'CPUHighThreshold' % for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: !Ref 'MonitorPeriod'
      EvaluationPeriods: !Ref 'EvaluationPeriod'
      Threshold: !Ref 'CPUHighThreshold'
      AlarmActions:
      - !Ref 'ServerScaleUpPolicy'
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref 'ServerGroup'
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale-down if CPU < !Ref 'CPULowThreshold' for 10 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: !Ref 'MonitorPeriod'
      EvaluationPeriods: !Ref 'EvaluationPeriod'
      Threshold: !Ref 'CPULowThreshold'
      AlarmActions:
      - !Ref 'ServerScaleDownPolicy'
      Dimensions:
      - Name: AutoScalingGroupName
        Value: !Ref 'ServerGroup'
      ComparisonOperator: LessThanThreshold
Outputs:
  URL:
    Description: The URL of the Component Deployed
#   Value: !Join ['', ['http://', !GetAtt [LoadbalancerName, DNSName']]]
    Value: !Join ['', ['http://', !Ref 'LoadbalancerName']]
